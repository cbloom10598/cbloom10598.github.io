<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2022-04-22T14:25:39-07:00</updated><id>/feed.xml</id><title type="html">Conor Bloom’s CIT Blog</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Spring 2022 Blog10: Changes In Technology</title><link href="/jekyl/update/2022/04/14/SP22-Blog10.html" rel="alternate" type="text/html" title="Spring 2022 Blog10: Changes In Technology" /><published>2022-04-14T11:59:00-07:00</published><updated>2022-04-14T11:59:00-07:00</updated><id>/jekyl/update/2022/04/14/SP22-Blog10</id><content type="html" xml:base="/jekyl/update/2022/04/14/SP22-Blog10.html">&lt;p&gt;To end off the series of blogs posted on this page thought the 2021-2022 year, there is one very important lesson that can be applied to all types of technology and that is change. Change is a huge buzzword in technology because what happens between today and tomorrow can change with hardware and software. Technology has been a fast-paced area and ever so much now since impacts seen today of world events and change. Concepts such as Human Computer Interaction, processes and innovations have change drastically over a short period of time and this good for the future research and innovation to happen in a quicker rate.&lt;/p&gt;

&lt;p&gt;The positive effects of change can be seen in the way how we think of computers. In the early days, we think computers as helpful machines that can assist with daily tasks and make life a bit easier instead of doing tasks manually. However, within a short span of time, computers are no longer thought of a single type of device, but computers can be described in different devices. Also, change in research now is pushing computers to completely automate the tasks and no longer requires a human input. Having change in technology also allows innovations and evolutions of concepts such as how we communicate, interact, or function as humans in the world we live in today.&lt;/p&gt;

&lt;p&gt;The biggest negative effect with constant change in technology is to learn and adapt to new concept and changes with existing protocols. If a person gets behind in learning and adapting to changes, it will be harder to work in the technology space or catch up with others that already have learned the newer technologies. This can be detrimental to businesses if they do not implement newer technologies that help them stay relevant. It is important to note that change is the main key when it comes to technology and the more people are accepting and preparing on changes with technology, the faster innovations can come.&lt;/p&gt;</content><author><name></name></author><category term="jekyl" /><category term="update" /><summary type="html">To end off the series of blogs posted on this page thought the 2021-2022 year, there is one very important lesson that can be applied to all types of technology and that is change. Change is a huge buzzword in technology because what happens between today and tomorrow can change with hardware and software. Technology has been a fast-paced area and ever so much now since impacts seen today of world events and change. Concepts such as Human Computer Interaction, processes and innovations have change drastically over a short period of time and this good for the future research and innovation to happen in a quicker rate.</summary></entry><entry><title type="html">Spring 2022 Blog9: Persuasive Systems</title><link href="/jekyll/update/2022/04/13/SP22-Blog9.html" rel="alternate" type="text/html" title="Spring 2022 Blog9: Persuasive Systems" /><published>2022-04-13T11:59:00-07:00</published><updated>2022-04-13T11:59:00-07:00</updated><id>/jekyll/update/2022/04/13/SP22-Blog9</id><content type="html" xml:base="/jekyll/update/2022/04/13/SP22-Blog9.html">&lt;p&gt;As technology progressed thought history especially with computers, one topic that was mentioned was how it can be used to persuade people in good or bad ways. This is a huge topic especially now when people get information online or use software that changes a person’s way of thinking. This is called Persuasive Systems and the core of the system is to change people’s behavior, emotions, and perspectives. This technology of Persuasive Systems can be spread to multiple platforms and not limited to a single piece of device or software. This can be from websites, mobile devices and social media that can have these types of systems.&lt;/p&gt;

&lt;p&gt;For Persuasive Systems to be effective, there are a few points to consider:&lt;/p&gt;

&lt;p&gt;•	They must utilize multiple platforms to communicate and know the person in multiple ways
•	Cannot be restricted on cognitive limitations like short term memory or other limitations
•	Be able to get data about the person such as friends and interests and use the data to motivate the person such as services related to that interest
•	Should not be used against the person such as exploiting confidential information to the public
•	Be able to maintain a private interaction between the person using the program and system&lt;/p&gt;

&lt;p&gt;Many people have seen Persuasive Systems from the early days of the internet and now. The noticeable ones are personalized ads tailored to the person when they are on a website or watch something on YouTube. The websites tend to get data on what a person is watching or more specifically, their search history and present them in a friendly format. Facebook and other social websites also go deeper with Persuasive Systems by integrating their features such as groups and recommended personalized ones based on the information on the website.&lt;/p&gt;

&lt;p&gt;More people are concerned about this technology and the impacts they can have. Some have taken steps to protect privacy and data through the years. If there is one thing for sure, this technology will evolve as technology as a whole evolves&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">As technology progressed thought history especially with computers, one topic that was mentioned was how it can be used to persuade people in good or bad ways. This is a huge topic especially now when people get information online or use software that changes a person’s way of thinking. This is called Persuasive Systems and the core of the system is to change people’s behavior, emotions, and perspectives. This technology of Persuasive Systems can be spread to multiple platforms and not limited to a single piece of device or software. This can be from websites, mobile devices and social media that can have these types of systems.</summary></entry><entry><title type="html">Spring 2022 Blog 8: CodeDeploy and GitHub Part 2</title><link href="/jekyll/update/2022/04/11/SP22-Blog8.html" rel="alternate" type="text/html" title="Spring 2022 Blog 8: CodeDeploy and GitHub Part 2" /><published>2022-04-11T11:59:00-07:00</published><updated>2022-04-11T11:59:00-07:00</updated><id>/jekyll/update/2022/04/11/SP22-Blog8</id><content type="html" xml:base="/jekyll/update/2022/04/11/SP22-Blog8.html">&lt;p&gt;Even though it is easy to navigate and use CodeDeploy for GitHub to deploy a website and applications, there a few tweaks and troubleshooting tools that go more in depth than the previous blog. First and foremost is to make sure that the EC2 is confugred properly with the right script to use CodeDeploy Agent. This is because when a does not put in a bash code for the EC2 about CodeDeploy, the EC2 module needs to install the agent so it can talk with CodeDeploy and properly organize the website. The other important factors are to make sure that the right files are put in the right locations for the agent to work otherwise it would keep looping until an unknown error pops up.&lt;/p&gt;

&lt;p&gt;For the EC2 component to work, it is important to enter the correct information whether using ubuntu or the AWS linux server. Then you would have to use “sudo apt install -y apache2 git awscli ruby-full wget” command to to install the aws component on the ubuntu server and the “wget” command to find the right server location where to install the CodeDeploy agent. Sometimes if needed, you can use a git clone to clone the repository directly to the server and to better help moving files to the proper location.&lt;/p&gt;

&lt;p&gt;Once the EC2 part is set up, you would need to make sure that files on the repository are moved to the right location. For instance, once everything is cloned on the server, the first thing is to do a mv command to take the “000-default.conf” file to the “sites-available” directory to display the proper configuration file. This will get CodeDeploy working and will produce no errors when deploying the GitHub application. However, it is important to install all the required packages such as the CLI and proper region for the CodeDeploy agent to work. After making sure these are properly configured. Make to restart apache 2 and use the “sudo” command as permissions might be locked when trying to do the following tasks above.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Even though it is easy to navigate and use CodeDeploy for GitHub to deploy a website and applications, there a few tweaks and troubleshooting tools that go more in depth than the previous blog. First and foremost is to make sure that the EC2 is confugred properly with the right script to use CodeDeploy Agent. This is because when a does not put in a bash code for the EC2 about CodeDeploy, the EC2 module needs to install the agent so it can talk with CodeDeploy and properly organize the website. The other important factors are to make sure that the right files are put in the right locations for the agent to work otherwise it would keep looping until an unknown error pops up.</summary></entry><entry><title type="html">Spring 2022 Blog 7: CodeDeploy and GitHub</title><link href="/jekyll/update/2022/04/03/SP22-Blog7.html" rel="alternate" type="text/html" title="Spring 2022 Blog 7: CodeDeploy and GitHub" /><published>2022-04-03T11:59:00-07:00</published><updated>2022-04-03T11:59:00-07:00</updated><id>/jekyll/update/2022/04/03/SP22-Blog7</id><content type="html" xml:base="/jekyll/update/2022/04/03/SP22-Blog7.html">&lt;p&gt;To change gears for a bit and transition to automation, AWS or Amazon Web Services has created a handy tool called CodeDeploy to automate software deployments and helps with developers pushing updates and content. The focus of CodeDeploy is to make sure that developers have a one stop shop to automate deployments that usually done manually would cause downtime and have redundant steps that can make the job even harder. The tool has a centralized center for all tasks related to deployment and monitoring the status of it. One of the features that is useful is the deep integration of GitHub and Jenkins to connect repositories and use to help publish websites.&lt;/p&gt;

&lt;p&gt;The steps for setting up CodeDeploy with GitHub can be tricky at first, but some of them can be only done once. The first thing is to make sure you would have to enter in your GitHub account and select the repository of your choosing for CodeDeploy to interact to. Then it will redirect you to GitHub which you need to authorize AWS. Once the proper connections are in place, you would setup the deployment group as well as the deployment application for your repository and have it running.&lt;/p&gt;

&lt;p&gt;There are some common issues and troubleshooting to know if you are doing a website or loading repositories from GitHub. First is to make sure that the instance is able to attach to the CodeDeploy since it is required to have an EC2 instance for it to run. The next thing to check is that the proper IAM policy is set so the user accessing CodeDeploy can modify settings and deploy applications from their side. One important thing to make sure of is a appspec.yml file to tell CodeDeploy how to deploy the software with AWS otherwise it would not do anything. CodeDeploy is a great tool to have and may big companies have used it to help with their deployment and when configured properly, it can be a lifesaver.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">To change gears for a bit and transition to automation, AWS or Amazon Web Services has created a handy tool called CodeDeploy to automate software deployments and helps with developers pushing updates and content. The focus of CodeDeploy is to make sure that developers have a one stop shop to automate deployments that usually done manually would cause downtime and have redundant steps that can make the job even harder. The tool has a centralized center for all tasks related to deployment and monitoring the status of it. One of the features that is useful is the deep integration of GitHub and Jenkins to connect repositories and use to help publish websites.</summary></entry><entry><title type="html">Spring 2022 Blog 6: Affective Computing Implementation</title><link href="/jekyll/update/2022/03/28/SP22-Blog6.html" rel="alternate" type="text/html" title="Spring 2022 Blog 6: Affective Computing Implementation" /><published>2022-03-28T11:59:00-07:00</published><updated>2022-03-28T11:59:00-07:00</updated><id>/jekyll/update/2022/03/28/SP22-Blog6</id><content type="html" xml:base="/jekyll/update/2022/03/28/SP22-Blog6.html">&lt;p&gt;In the 1997, Rosalind Picard created the idea of Affective Computing which computers displayed or influenced human emotions. This idea of affective computing stems from neurology, medicine, and psychology. It is using a biology perspective about how the brain processes emotion and interact with other humans and machines. This idea became a major importance in the Artificial Intelligence and the Human Computer interaction fields because having machines to be able to respond to human emotion or display human emotion would change the game how computers and humans can work together. There are many approaches but the main one is the individual cognitive model.&lt;/p&gt;

&lt;p&gt;The individual cognitive model is a popular approach when computer scientists are constructing affective computing. It is also called first principles and it how it works is that the computer generates expressions based on a guide of principles and not from hardwired emotion pairs. It is used with both attempting to recognize a person’s emotional state as well as signals from the person’s body, face, or voice. This includes analyzing how eyebrows and muscles are moved to express either sad or happy expressions. The goal is to create an interaction that is human-like as possible through rules and guidelines like from Ortony.&lt;/p&gt;

&lt;p&gt;Despite the wide popularity first principles is, it has limitation on how it handles the process to identify human behavior. Limitations are from how the model was designed for simplicity as well as interpreting human behavior because it is difficult to base behavior on static models. Human behavior is dynamic and can change so having that static guideline to go by can create false assumptions on a human’s state of expressions. Luckily, this has developed over the years as technology progresses and Picard’s idea can be more of a reality in the years to come.&lt;/p&gt;

&lt;p&gt;An article to learn more about affective computing and sources for this blog can be found here:&lt;/p&gt;

&lt;p&gt;www.interaction-design.org/literature/book/the-encyclopedia-of-human-computer-interaction-2nd-ed/affective-computing&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">In the 1997, Rosalind Picard created the idea of Affective Computing which computers displayed or influenced human emotions. This idea of affective computing stems from neurology, medicine, and psychology. It is using a biology perspective about how the brain processes emotion and interact with other humans and machines. This idea became a major importance in the Artificial Intelligence and the Human Computer interaction fields because having machines to be able to respond to human emotion or display human emotion would change the game how computers and humans can work together. There are many approaches but the main one is the individual cognitive model.</summary></entry><entry><title type="html">Spring 2022 Blog 5: Technical Details of Interaction Desgin</title><link href="/jekyll/update/2022/03/14/SP22-Blog5.html" rel="alternate" type="text/html" title="Spring 2022 Blog 5: Technical Details of Interaction Desgin" /><published>2022-03-14T11:59:00-07:00</published><updated>2022-03-14T11:59:00-07:00</updated><id>/jekyll/update/2022/03/14/SP22-Blog5</id><content type="html" xml:base="/jekyll/update/2022/03/14/SP22-Blog5.html">&lt;p&gt;Over the last two decades, the study of interaction desgin has taken off with the concept on how humans interact with daily objects around them and aopply it to computer desgin. Ever since computers started to become more personal and everyday people were buying computers or other techniological products, people in the industy had to study on how a person on a philosophical level how a person is able to interact the everyday objects around them and apply those findings on creating a computer interaction design. This is geared at studying simple events as turning on a lightbulb in a room or using the door knob to open the door to get into the house. The overall process looks simple but the science behind it is a bit more complex.&lt;/p&gt;

&lt;p&gt;The first question to ask when approaching interaction desgin is what makes a productive interative in the first place? This can be led to several ideas but the simplest form of a interactive product is by touch or a switch. One example of this is a lamp that requires a person to touch the swithc to turn on the light but also touch the switch again to turn the light off. It can also lead to the mose complex forms like clicking the run button on a mouse to start a computer program. However, the product needs to be operational to be called interactive. Even if the lamp was unplugged, it would not be called interactive because the light would not turn on and you would just have a switch that does not do anything. To call a productive with interactive, it must be able to complete the tasks with just interaction by the human and to make sure that the devices is powered on.&lt;/p&gt;

&lt;p&gt;The technical details on how designers can create an interatice product is to regonize how the human brain interprets interacting a product by using different “proceesors.” We will walk through the setps using the lighbulb method. The first process of the human brain is the perceptual processor that through their eyes see that the room is dark and needs to turn the light on. From there, the cognitive processor intrprets the request and is able to find/give instruction on how to turn the light on which in return, send signals to the motor processor that will make the human have the physical action of turning on the switch. Why is this is important for designers to create interactive product desgins is because knowing how the human processes the interaction of a product is able to create more user freidnly products. Computers use to be all on terminals which had a complex interaction with humans, but as soon as computers developed graphic design, products are able to become user freindly to may people and the philosophical understanding of how a human interacts can create a more useful product to the human. Having that scientific perspective leads to more sophisticated dsesigns with the human skills in mind.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Over the last two decades, the study of interaction desgin has taken off with the concept on how humans interact with daily objects around them and aopply it to computer desgin. Ever since computers started to become more personal and everyday people were buying computers or other techniological products, people in the industy had to study on how a person on a philosophical level how a person is able to interact the everyday objects around them and apply those findings on creating a computer interaction design. This is geared at studying simple events as turning on a lightbulb in a room or using the door knob to open the door to get into the house. The overall process looks simple but the science behind it is a bit more complex.</summary></entry><entry><title type="html">Spring 2022 Blog 4: The Computing Eras</title><link href="/jekyll/update/2022/03/08/SP22-Blog4.html" rel="alternate" type="text/html" title="Spring 2022 Blog 4: The Computing Eras" /><published>2022-03-08T10:59:00-08:00</published><updated>2022-03-08T10:59:00-08:00</updated><id>/jekyll/update/2022/03/08/SP22-Blog4</id><content type="html" xml:base="/jekyll/update/2022/03/08/SP22-Blog4.html">&lt;p&gt;The idea of Artificial Intelligence has been talked about in the mid 1950s when machines can communicate to humans and perform tasks for them. This idea became popular on Hollywood as movies like 2001 depicted AI computers controlling appliances and automating daily tasks. However, the idea of artificial intelligence is not the right method of study peole in the technology field use. The idea of commputers interacting and being able to think like humans is called Cognitive Computing. IBM has written an article about it and states that it is computers that is able to naturally interact with humans and work together. There are three main significant time periods that lead to the development of cognitive computing: tabulating era, programming era, and cognitive era. These time eras were extremley important to the development of machines today and how we study computers in the futre.&lt;/p&gt;

&lt;p&gt;The tabulating era is where it all started for early processes of computer automation. This era consists of machines that were designed to be single purpose such as punching time cards or storing data and eventually be able to give machines instructions. This help paved way for early automation because they were able to do calulation and help with organizing business when it comes with data. These machines were really useful for the US Census which would be conducted every 10 years and the machines were usfull counting data and organizing it for population studies. Alothough these machines were limited to a single task, they created an early idea was machines and automations can do.&lt;/p&gt;

&lt;p&gt;After World War 2, digital machines began to develop and were on the rise of the new possibilities form them including programming. The programming era led to the tools we used today in regards of software development and coding. This era began using programming languages and introduce the idea of a if/then statement where if you tell the coputer about a condition, then the computer will do the acton you programmed it too. Part of this development includes loops where the computer can do the same action over and over again until the if condition finds something to break the loop. These computers in the beginning took up rooms and were not portable, but the invention of the microprocessor helped to bring protability to machines. The programming era also enabled people to create complex operations for the computer to do in return making the computer more automated. Despite these advancements, computers acted like it was a computer and the human and computer relationship was stagmented until a new era began.&lt;/p&gt;

&lt;p&gt;In 2011, the congitive era jumped from programming to cognitive era which led to how can humans and computers naturally interact without complexity. However, the formulation of the idea began in the 1960s where people have discussed the possibility of computers to think for themselves and to work side-by-side with their human counterpart in making decsisons or finishing tasks. This idea was showcased in 2011 when IBM launched Watson, a congitive computing that was able to think autonomously. This was displayed in the game show Jeopardy when the computer was able to defeat two human contestants. This helped spread more awareneess the capibilities computers can do when applying cognitive research on computers. People have began developing concepts and products to bridge the relationship gap between man and machine and hopefully will have the abilities to work together instead of humans programming computers. This can lead to consumers having a computer to help with their daily life, but for businesses to use cognitve computing for key decision making.&lt;/p&gt;

&lt;p&gt;In overall summary, the three computer eras gives a sence of how machines evolved from crunching numbers to be able to think for themselves. Knowing about the evolution is key when researching the future posibilites of machines and how it can affect the future for all of us. To learn about more about IBM’s take and the source of this blog, please use the link below.&lt;/p&gt;

&lt;p&gt;http://publicservicesalliance.org/wp-content/uploads/2015/10/Computing_Cognition_WhitePaper.pdf&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">The idea of Artificial Intelligence has been talked about in the mid 1950s when machines can communicate to humans and perform tasks for them. This idea became popular on Hollywood as movies like 2001 depicted AI computers controlling appliances and automating daily tasks. However, the idea of artificial intelligence is not the right method of study peole in the technology field use. The idea of commputers interacting and being able to think like humans is called Cognitive Computing. IBM has written an article about it and states that it is computers that is able to naturally interact with humans and work together. There are three main significant time periods that lead to the development of cognitive computing: tabulating era, programming era, and cognitive era. These time eras were extremley important to the development of machines today and how we study computers in the futre.</summary></entry><entry><title type="html">Spring 2022 Blog 3: User Modeling</title><link href="/jekyll/update/2022/03/02/SP22-Blog3.html" rel="alternate" type="text/html" title="Spring 2022 Blog 3: User Modeling" /><published>2022-03-02T10:59:00-08:00</published><updated>2022-03-02T10:59:00-08:00</updated><id>/jekyll/update/2022/03/02/SP22-Blog3</id><content type="html" xml:base="/jekyll/update/2022/03/02/SP22-Blog3.html">&lt;p&gt;Many companies today when desgining a product or software takes account to what a user can do and their abilities. This idea is called User Modeling and it is the main idea how to desing something tailored towards the person using the product. Since no one has the same features as the next person such as thinking or mobility, it is important to have options to allow people to customize the software to their abilities. There are two main areas in user modeling that are important when implementing it. It is Cognitive Limitation and Pysical Limitation.&lt;/p&gt;

&lt;p&gt;Cognitive Limitation is focusing on a person’s limitation when it comes to mental abilities. Many people preceive the world and surrounding items in fron of them differently, however, it is not in a way of thinking most of the time, but how they percieve surroundings. For instance, people with ADHD are unable to focus for a long time and get easily distracted while people on the Autism Spectrum Disorder, may have a hard time expressing themselves which can lead to difficulty socializing and behavior. So a person who is creating a program, must have either a desgin or option in settings to accomidate those with cognitive limitations. This could mean ways on getting the person’s attention or making the process easier for someone to understand and navigate.&lt;/p&gt;

&lt;p&gt;Physical Limitation has the same concept as Cognitivie Limitation, however its focus is the phycial abilities of a person. These limitation can include motor ability and dexterity such as how a person uses a keyboard or mouse or has a hard time using their hands. Someone who is a programmer might have to create inputes for accessible keyboards and accessories for the person to use or alter the software/GUI being used. Some people also may have difficult image processing which can lead to color blindness or being blind in general. So accomidations like screen readers to read the screen that is in front of them or a switch to alter colors for color blindess because they can only see certain colors.&lt;/p&gt;

&lt;p&gt;Technology has evolved to accomidate limitations in many ways. Being able to have User Modeling enabled in products and software helps more people have access to many programs and softwares and can feel apart of the program. They do not have to worry about not using it because of their limitations.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Many companies today when desgining a product or software takes account to what a user can do and their abilities. This idea is called User Modeling and it is the main idea how to desing something tailored towards the person using the product. Since no one has the same features as the next person such as thinking or mobility, it is important to have options to allow people to customize the software to their abilities. There are two main areas in user modeling that are important when implementing it. It is Cognitive Limitation and Pysical Limitation.</summary></entry><entry><title type="html">Spring 2022 Blog 2: Color Theory</title><link href="/jekyll/update/2022/02/23/SP22-Blog2.html" rel="alternate" type="text/html" title="Spring 2022 Blog 2: Color Theory" /><published>2022-02-23T10:59:00-08:00</published><updated>2022-02-23T10:59:00-08:00</updated><id>/jekyll/update/2022/02/23/SP22-Blog2</id><content type="html" xml:base="/jekyll/update/2022/02/23/SP22-Blog2.html">&lt;p&gt;One of the checklists for desgining any product or software is to use what type of color desgin or scheme should be used. Using colors especially for a product such as in technology is important because colors can express feelings and give the tone of the product. This idea of using color in guidlelines on how to use it is called color theory. It was orginially used by Issac Newton and his invention of the color wheel. The color wheels represents what colors relate to eachother for better paring. They are broken down to primary colors, secondary colors, and tertiary colors. It is important to understnad what colors are a relation to eachother to show the asthetic desgin of a product. You do not want one main color and one main shade of it.&lt;/p&gt;

&lt;p&gt;Color tempratures is also considered when incorporating colors on a product because it expresses a certian feelings for that product. Each color is categorized in a group based on the type of feeling each color represents. For example, warm colors like red and orange represent power and happiness while blue and purple represent claming and soothing moods. Knowing these relations can help with what mood or exprressions you want people to feel when exploring the product. When you talk about speed and performance, usually laptops or keyboards can be desinged with red and orage while a meditation or desktop work app that is about calm and soothing moods can be blue and green. It is important to test the colors and make sure you get the right reaction to the product as it will add more of a fuller desgin when the right colors are in place.&lt;/p&gt;

&lt;p&gt;The main two conepts when adding color should every desginer use for technology and product design is making sure they relate to eachother and express the proper moods based on the type of product. Colors in a way can be technological because it is a skill to know how colors project certain moods or relate in a certain way. The science behind it is finding the right match to appeal to people about your product. Having to much flashy colors for a project or using the wrong color pallete will not protray the right visiual message. It is important for everyone in the tech industry that using basic color tools and guidelines can help target their products to people visually.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">One of the checklists for desgining any product or software is to use what type of color desgin or scheme should be used. Using colors especially for a product such as in technology is important because colors can express feelings and give the tone of the product. This idea of using color in guidlelines on how to use it is called color theory. It was orginially used by Issac Newton and his invention of the color wheel. The color wheels represents what colors relate to eachother for better paring. They are broken down to primary colors, secondary colors, and tertiary colors. It is important to understnad what colors are a relation to eachother to show the asthetic desgin of a product. You do not want one main color and one main shade of it.</summary></entry><entry><title type="html">Spring 2022 Blog 1: Storyboards and Prototypes</title><link href="/jekyll/update/2022/02/18/SP22-Blog1.html" rel="alternate" type="text/html" title="Spring 2022 Blog 1: Storyboards and Prototypes" /><published>2022-02-18T10:59:00-08:00</published><updated>2022-02-18T10:59:00-08:00</updated><id>/jekyll/update/2022/02/18/SP22-Blog1</id><content type="html" xml:base="/jekyll/update/2022/02/18/SP22-Blog1.html">&lt;p&gt;Storyboards and prototyping hardware and software have been around since the time of when computers began to become mainstream. These are effective tools that are able to properly plan and create products and services to a company’s clients. They are extremley import because as technology evolves and become complex, explaining products and serivces orally, is no longer effective to show what is being planned or designed to a development team. The practice of a storyboard and prototypes makes the processes of creating that idea not as convoluted as it used to be. Many technology companies such as apple rely on these practices to streamline their ideas and speed up development phases.&lt;/p&gt;

&lt;p&gt;In order to begin any desgin of any prototype, you must create a storyboard to show the main purpose of the service or app. Most storyboards are usually drawn from the perspective of how the user will use the application in everyday use. There are story boards that show how the app or hardware works as well as making digital storyboards. However, drawing a storyboard is more interactive and reliable because it enables to get the point across without using many words to distract the main focus. Creating storyboards can be challenge when a device or software has a multiple user profiles or have different systems since each PC and Mac are setup diffferently. Good tips to storyboarding is to make sure if drawing the designs are detailed and not conveluted. The goal of storyboarding as mentioned is to get the main point across on how users will interact with the hardware or software. Esentially, the more detialed the drawing is, the more the storyboard makes sense to the shareholders.&lt;/p&gt;

&lt;p&gt;After the sotryboard phase, the next step is the prototyping phase. This is when the ideas of the storyboards comes to life as the actual product or software is designed. There are many types of protoyping and each are unique in their own way. One way is to use the paper model which the prototye is primarily made from paper and simulate what the product look and feel like to the user. The second is going digital and using programs like Adobe Xd for digital prototyping and desgining. The plus for using programs like Adobe Xd is that the design can be easily transferred to the final product. Prototypes can also help have the problem of desgining the protoptype to be to complex to explain complex ststems. If a system or product has complicated layers, desgining a prototype for that can be impossible to do.&lt;/p&gt;

&lt;p&gt;At the end of the day, storyboarding and prototyping products are important tools for companies to have when creating a product. It gives the company a visual guide on how the product will look and feel and what will be used in real life. These tools are lifesavers when it comes to desgining a product from an idea to the shelves of a app store or physical store.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">Storyboards and prototyping hardware and software have been around since the time of when computers began to become mainstream. These are effective tools that are able to properly plan and create products and services to a company’s clients. They are extremley import because as technology evolves and become complex, explaining products and serivces orally, is no longer effective to show what is being planned or designed to a development team. The practice of a storyboard and prototypes makes the processes of creating that idea not as convoluted as it used to be. Many technology companies such as apple rely on these practices to streamline their ideas and speed up development phases.</summary></entry></feed>